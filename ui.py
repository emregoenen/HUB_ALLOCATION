# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'final.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(931, 817)
        MainWindow.setBaseSize(QtCore.QSize(1280, 720))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox_9 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_9.sizePolicy().hasHeightForWidth())
        self.groupBox_9.setSizePolicy(sizePolicy)
        self.groupBox_9.setTitle("")
        self.groupBox_9.setObjectName("groupBox_9")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.groupBox_9)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.groupBox_10 = QtWidgets.QGroupBox(self.groupBox_9)
        self.groupBox_10.setObjectName("groupBox_10")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.groupBox_10)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.toolButton_openData = QtWidgets.QToolButton(self.groupBox_10)
        self.toolButton_openData.setEnabled(True)
        self.toolButton_openData.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_openData.setText("")
        self.toolButton_openData.setObjectName("toolButton_openData")
        self.horizontalLayout_9.addWidget(self.toolButton_openData)
        self.horizontalLayout_8.addWidget(self.groupBox_10)
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setObjectName("groupBox_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_4)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.toolButton_saveInitialSolution = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_saveInitialSolution.setEnabled(False)
        self.toolButton_saveInitialSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_saveInitialSolution.setText("")
        self.toolButton_saveInitialSolution.setObjectName("toolButton_saveInitialSolution")
        self.horizontalLayout_4.addWidget(self.toolButton_saveInitialSolution)
        self.toolButton_exportAsInitialSolution = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_exportAsInitialSolution.setEnabled(False)
        self.toolButton_exportAsInitialSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_exportAsInitialSolution.setText("")
        self.toolButton_exportAsInitialSolution.setObjectName("toolButton_exportAsInitialSolution")
        self.horizontalLayout_4.addWidget(self.toolButton_exportAsInitialSolution)
        self.toolButton_clearInitialSolution = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_clearInitialSolution.setEnabled(False)
        self.toolButton_clearInitialSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_clearInitialSolution.setText("")
        self.toolButton_clearInitialSolution.setObjectName("toolButton_clearInitialSolution")
        self.horizontalLayout_4.addWidget(self.toolButton_clearInitialSolution)
        self.toolButton_undoInitialSolution = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_undoInitialSolution.setEnabled(False)
        self.toolButton_undoInitialSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_undoInitialSolution.setText("")
        self.toolButton_undoInitialSolution.setObjectName("toolButton_undoInitialSolution")
        self.horizontalLayout_4.addWidget(self.toolButton_undoInitialSolution)
        self.toolButton_redoInitialSolution = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_redoInitialSolution.setEnabled(False)
        self.toolButton_redoInitialSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_redoInitialSolution.setText("")
        self.toolButton_redoInitialSolution.setObjectName("toolButton_redoInitialSolution")
        self.horizontalLayout_4.addWidget(self.toolButton_redoInitialSolution)
        self.horizontalLayout_8.addWidget(self.groupBox_4)
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_5.sizePolicy().hasHeightForWidth())
        self.groupBox_5.setSizePolicy(sizePolicy)
        self.groupBox_5.setObjectName("groupBox_5")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.groupBox_5)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.toolButton_saveFinalSolution = QtWidgets.QToolButton(self.groupBox_5)
        self.toolButton_saveFinalSolution.setEnabled(False)
        self.toolButton_saveFinalSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_saveFinalSolution.setText("")
        self.toolButton_saveFinalSolution.setObjectName("toolButton_saveFinalSolution")
        self.horizontalLayout_5.addWidget(self.toolButton_saveFinalSolution)
        self.toolButton_exportAsFinalSolution = QtWidgets.QToolButton(self.groupBox_5)
        self.toolButton_exportAsFinalSolution.setEnabled(False)
        self.toolButton_exportAsFinalSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_exportAsFinalSolution.setText("")
        self.toolButton_exportAsFinalSolution.setObjectName("toolButton_exportAsFinalSolution")
        self.horizontalLayout_5.addWidget(self.toolButton_exportAsFinalSolution)
        self.toolButton_clearFinalSolution = QtWidgets.QToolButton(self.groupBox_5)
        self.toolButton_clearFinalSolution.setEnabled(False)
        self.toolButton_clearFinalSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_clearFinalSolution.setText("")
        self.toolButton_clearFinalSolution.setObjectName("toolButton_clearFinalSolution")
        self.horizontalLayout_5.addWidget(self.toolButton_clearFinalSolution)
        self.toolButton_undoFinalSolution = QtWidgets.QToolButton(self.groupBox_5)
        self.toolButton_undoFinalSolution.setEnabled(False)
        self.toolButton_undoFinalSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_undoFinalSolution.setText("")
        self.toolButton_undoFinalSolution.setObjectName("toolButton_undoFinalSolution")
        self.horizontalLayout_5.addWidget(self.toolButton_undoFinalSolution)
        self.toolButton_redoFinalSolution = QtWidgets.QToolButton(self.groupBox_5)
        self.toolButton_redoFinalSolution.setEnabled(False)
        self.toolButton_redoFinalSolution.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_redoFinalSolution.setText("")
        self.toolButton_redoFinalSolution.setObjectName("toolButton_redoFinalSolution")
        self.horizontalLayout_5.addWidget(self.toolButton_redoFinalSolution)
        self.horizontalLayout_8.addWidget(self.groupBox_5)
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_6.sizePolicy().hasHeightForWidth())
        self.groupBox_6.setSizePolicy(sizePolicy)
        self.groupBox_6.setObjectName("groupBox_6")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox_6)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.toolButton_kMeans = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_kMeans.setEnabled(False)
        self.toolButton_kMeans.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_kMeans.setText("")
        self.toolButton_kMeans.setObjectName("toolButton_kMeans")
        self.horizontalLayout_6.addWidget(self.toolButton_kMeans)
        self.toolButton_affinityPropagation = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_affinityPropagation.setEnabled(False)
        self.toolButton_affinityPropagation.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_affinityPropagation.setText("")
        self.toolButton_affinityPropagation.setObjectName("toolButton_affinityPropagation")
        self.horizontalLayout_6.addWidget(self.toolButton_affinityPropagation)
        self.toolButton_meanShift = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_meanShift.setEnabled(False)
        self.toolButton_meanShift.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_meanShift.setText("")
        self.toolButton_meanShift.setObjectName("toolButton_meanShift")
        self.horizontalLayout_6.addWidget(self.toolButton_meanShift)
        self.toolButton_spectralClustering = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_spectralClustering.setEnabled(False)
        self.toolButton_spectralClustering.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_spectralClustering.setText("")
        self.toolButton_spectralClustering.setObjectName("toolButton_spectralClustering")
        self.horizontalLayout_6.addWidget(self.toolButton_spectralClustering)
        self.toolButton_hierarchicalClustering = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_hierarchicalClustering.setEnabled(False)
        self.toolButton_hierarchicalClustering.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_hierarchicalClustering.setText("")
        self.toolButton_hierarchicalClustering.setObjectName("toolButton_hierarchicalClustering")
        self.horizontalLayout_6.addWidget(self.toolButton_hierarchicalClustering)
        self.toolButton_dbscan = QtWidgets.QToolButton(self.groupBox_6)
        self.toolButton_dbscan.setEnabled(False)
        self.toolButton_dbscan.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_dbscan.setText("")
        self.toolButton_dbscan.setObjectName("toolButton_dbscan")
        self.horizontalLayout_6.addWidget(self.toolButton_dbscan)
        self.horizontalLayout_8.addWidget(self.groupBox_6)
        self.groupBox_7 = QtWidgets.QGroupBox(self.groupBox_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_7.sizePolicy().hasHeightForWidth())
        self.groupBox_7.setSizePolicy(sizePolicy)
        self.groupBox_7.setObjectName("groupBox_7")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.groupBox_7)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.toolButton_hillClimbing = QtWidgets.QToolButton(self.groupBox_7)
        self.toolButton_hillClimbing.setEnabled(False)
        self.toolButton_hillClimbing.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_hillClimbing.setText("")
        self.toolButton_hillClimbing.setObjectName("toolButton_hillClimbing")
        self.horizontalLayout_7.addWidget(self.toolButton_hillClimbing)
        self.toolButton_simulatedAnneling = QtWidgets.QToolButton(self.groupBox_7)
        self.toolButton_simulatedAnneling.setEnabled(False)
        self.toolButton_simulatedAnneling.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_simulatedAnneling.setText("")
        self.toolButton_simulatedAnneling.setObjectName("toolButton_simulatedAnneling")
        self.horizontalLayout_7.addWidget(self.toolButton_simulatedAnneling)
        self.horizontalLayout_8.addWidget(self.groupBox_7)
        self.groupBox_11 = QtWidgets.QGroupBox(self.groupBox_9)
        self.groupBox_11.setObjectName("groupBox_11")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.groupBox_11)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.toolButton_exit = QtWidgets.QToolButton(self.groupBox_11)
        self.toolButton_exit.setEnabled(True)
        self.toolButton_exit.setMinimumSize(QtCore.QSize(32, 32))
        self.toolButton_exit.setText("")
        self.toolButton_exit.setObjectName("toolButton_exit")
        self.horizontalLayout_10.addWidget(self.toolButton_exit)
        self.horizontalLayout_8.addWidget(self.groupBox_11)
        self.verticalLayout_2.addWidget(self.groupBox_9)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox_3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.groupBox = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_initialSolution = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_initialSolution.sizePolicy().hasHeightForWidth())
        self.label_initialSolution.setSizePolicy(sizePolicy)
        self.label_initialSolution.setText("")
        self.label_initialSolution.setScaledContents(True)
        self.label_initialSolution.setObjectName("label_initialSolution")
        self.horizontalLayout.addWidget(self.label_initialSolution)
        self.horizontalLayout_3.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_finalSolution = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_finalSolution.sizePolicy().hasHeightForWidth())
        self.label_finalSolution.setSizePolicy(sizePolicy)
        self.label_finalSolution.setText("")
        self.label_finalSolution.setScaledContents(True)
        self.label_finalSolution.setObjectName("label_finalSolution")
        self.horizontalLayout_2.addWidget(self.label_finalSolution)
        self.horizontalLayout_3.addWidget(self.groupBox_2)
        self.verticalLayout_2.addWidget(self.groupBox_3)
        self.groupBox_8 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_8.sizePolicy().hasHeightForWidth())
        self.groupBox_8.setSizePolicy(sizePolicy)
        self.groupBox_8.setMaximumSize(QtCore.QSize(16777215, 200))
        self.groupBox_8.setObjectName("groupBox_8")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_8)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textBrowser_infoPanel = QtWidgets.QTextBrowser(self.groupBox_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_infoPanel.sizePolicy().hasHeightForWidth())
        self.textBrowser_infoPanel.setSizePolicy(sizePolicy)
        self.textBrowser_infoPanel.setMaximumSize(QtCore.QSize(16777215, 200))
        self.textBrowser_infoPanel.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.textBrowser_infoPanel.setObjectName("textBrowser_infoPanel")
        self.verticalLayout.addWidget(self.textBrowser_infoPanel)
        self.verticalLayout_2.addWidget(self.groupBox_8)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 931, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuExport_As = QtWidgets.QMenu(self.menuFile)
        self.menuExport_As.setEnabled(True)
        self.menuExport_As.setObjectName("menuExport_As")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuClear = QtWidgets.QMenu(self.menuEdit)
        self.menuClear.setEnabled(True)
        self.menuClear.setObjectName("menuClear")
        self.menuUndo = QtWidgets.QMenu(self.menuEdit)
        self.menuUndo.setObjectName("menuUndo")
        self.menuRedo = QtWidgets.QMenu(self.menuEdit)
        self.menuRedo.setEnabled(True)
        self.menuRedo.setObjectName("menuRedo")
        self.menuClustering = QtWidgets.QMenu(self.menubar)
        self.menuClustering.setObjectName("menuClustering")
        self.menuHeuristics = QtWidgets.QMenu(self.menubar)
        self.menuHeuristics.setObjectName("menuHeuristics")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_Data = QtWidgets.QAction(MainWindow)
        self.actionOpen_Data.setObjectName("actionOpen_Data")
        self.actionSave_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.actionSave_Initial_Solution.setEnabled(False)
        self.actionSave_Initial_Solution.setObjectName("actionSave_Initial_Solution")
        self.actionSave_Final_Solution = QtWidgets.QAction(MainWindow)
        self.actionSave_Final_Solution.setEnabled(False)
        self.actionSave_Final_Solution.setObjectName("actionSave_Final_Solution")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionClear_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.actionClear_Initial_Solution.setEnabled(False)
        self.actionClear_Initial_Solution.setObjectName("actionClear_Initial_Solution")
        self.actionClear_Final_Solution = QtWidgets.QAction(MainWindow)
        self.actionClear_Final_Solution.setEnabled(False)
        self.actionClear_Final_Solution.setObjectName("actionClear_Final_Solution")
        self.actionUndo_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.actionUndo_Initial_Solution.setEnabled(False)
        self.actionUndo_Initial_Solution.setObjectName("actionUndo_Initial_Solution")
        self.actionUndo_Final_Solution = QtWidgets.QAction(MainWindow)
        self.actionUndo_Final_Solution.setEnabled(False)
        self.actionUndo_Final_Solution.setObjectName("actionUndo_Final_Solution")
        self.actionRedo_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.actionRedo_Initial_Solution.setEnabled(False)
        self.actionRedo_Initial_Solution.setObjectName("actionRedo_Initial_Solution")
        self.actionRedo_Final_Solution = QtWidgets.QAction(MainWindow)
        self.actionRedo_Final_Solution.setEnabled(False)
        self.actionRedo_Final_Solution.setObjectName("actionRedo_Final_Solution")
        self.actionK_Means = QtWidgets.QAction(MainWindow)
        self.actionK_Means.setEnabled(False)
        self.actionK_Means.setObjectName("actionK_Means")
        self.actionAffinity_Propagation = QtWidgets.QAction(MainWindow)
        self.actionAffinity_Propagation.setEnabled(False)
        self.actionAffinity_Propagation.setObjectName("actionAffinity_Propagation")
        self.actionMean_shift = QtWidgets.QAction(MainWindow)
        self.actionMean_shift.setEnabled(False)
        self.actionMean_shift.setObjectName("actionMean_shift")
        self.actionSpectral_Clustering = QtWidgets.QAction(MainWindow)
        self.actionSpectral_Clustering.setEnabled(False)
        self.actionSpectral_Clustering.setObjectName("actionSpectral_Clustering")
        self.actionHierarchical_Clustering = QtWidgets.QAction(MainWindow)
        self.actionHierarchical_Clustering.setEnabled(False)
        self.actionHierarchical_Clustering.setObjectName("actionHierarchical_Clustering")
        self.actionDBSCAN = QtWidgets.QAction(MainWindow)
        self.actionDBSCAN.setEnabled(False)
        self.actionDBSCAN.setObjectName("actionDBSCAN")
        self.actionHill_Climbing = QtWidgets.QAction(MainWindow)
        self.actionHill_Climbing.setEnabled(False)
        self.actionHill_Climbing.setObjectName("actionHill_Climbing")
        self.actionSimulated_Anneling = QtWidgets.QAction(MainWindow)
        self.actionSimulated_Anneling.setEnabled(False)
        self.actionSimulated_Anneling.setObjectName("actionSimulated_Anneling")
        self.actionExport_As_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.actionExport_As_Initial_Solution.setEnabled(False)
        self.actionExport_As_Initial_Solution.setObjectName("actionExport_As_Initial_Solution")
        self.actionExport_As_Final_Solution = QtWidgets.QAction(MainWindow)
        self.actionExport_As_Final_Solution.setEnabled(False)
        self.actionExport_As_Final_Solution.setObjectName("actionExport_As_Final_Solution")
        self.menuExport_As.addAction(self.actionExport_As_Initial_Solution)
        self.menuExport_As.addAction(self.actionExport_As_Final_Solution)
        self.menuFile.addAction(self.actionOpen_Data)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Initial_Solution)
        self.menuFile.addAction(self.actionSave_Final_Solution)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuExport_As.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuClear.addAction(self.actionClear_Initial_Solution)
        self.menuClear.addAction(self.actionClear_Final_Solution)
        self.menuUndo.addAction(self.actionUndo_Initial_Solution)
        self.menuUndo.addAction(self.actionUndo_Final_Solution)
        self.menuRedo.addAction(self.actionRedo_Initial_Solution)
        self.menuRedo.addAction(self.actionRedo_Final_Solution)
        self.menuEdit.addAction(self.menuClear.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.menuUndo.menuAction())
        self.menuEdit.addAction(self.menuRedo.menuAction())
        self.menuClustering.addAction(self.actionK_Means)
        self.menuClustering.addAction(self.actionAffinity_Propagation)
        self.menuClustering.addAction(self.actionMean_shift)
        self.menuClustering.addAction(self.actionSpectral_Clustering)
        self.menuClustering.addAction(self.actionHierarchical_Clustering)
        self.menuClustering.addAction(self.actionDBSCAN)
        self.menuHeuristics.addAction(self.actionHill_Climbing)
        self.menuHeuristics.addAction(self.actionSimulated_Anneling)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuClustering.menuAction())
        self.menubar.addAction(self.menuHeuristics.menuAction())

        self.retranslateUi(MainWindow)
        self.toolButton_affinityPropagation.clicked.connect(self.actionAffinity_Propagation.trigger)
        self.toolButton_clearFinalSolution.clicked.connect(self.actionClear_Final_Solution.trigger)
        self.toolButton_clearInitialSolution.clicked.connect(self.actionClear_Initial_Solution.trigger)
        self.toolButton_dbscan.clicked.connect(self.actionDBSCAN.trigger)
        self.toolButton_exit.clicked.connect(self.actionExit.trigger)
        self.toolButton_exportAsFinalSolution.clicked.connect(self.actionExport_As_Final_Solution.trigger)
        self.toolButton_exportAsInitialSolution.clicked.connect(self.actionExport_As_Initial_Solution.trigger)
        self.toolButton_hierarchicalClustering.clicked.connect(self.actionHierarchical_Clustering.trigger)
        self.toolButton_hillClimbing.clicked.connect(self.actionHill_Climbing.trigger)
        self.toolButton_kMeans.clicked.connect(self.actionK_Means.trigger)
        self.toolButton_meanShift.clicked.connect(self.actionMean_shift.trigger)
        self.toolButton_openData.clicked.connect(self.actionOpen_Data.trigger)
        self.toolButton_redoFinalSolution.clicked.connect(self.actionRedo_Final_Solution.trigger)
        self.toolButton_redoInitialSolution.clicked.connect(self.actionRedo_Initial_Solution.trigger)
        self.toolButton_saveFinalSolution.clicked.connect(self.actionSave_Final_Solution.trigger)
        self.toolButton_saveInitialSolution.clicked.connect(self.actionSave_Initial_Solution.trigger)
        self.toolButton_simulatedAnneling.clicked.connect(self.actionSimulated_Anneling.trigger)
        self.toolButton_spectralClustering.clicked.connect(self.actionSpectral_Clustering.trigger)
        self.toolButton_undoFinalSolution.clicked.connect(self.actionUndo_Final_Solution.trigger)
        self.toolButton_undoInitialSolution.clicked.connect(self.actionUndo_Initial_Solution.trigger)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HUB ALLOCATION USER INTERFACE"))
        self.groupBox_10.setTitle(_translate("MainWindow", "Open Data"))
        self.toolButton_openData.setStatusTip(_translate("MainWindow", "Open .txt file to import point cloud"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Initial Solution"))
        self.toolButton_saveInitialSolution.setStatusTip(_translate("MainWindow", "Save initial solution with extension .txt"))
        self.toolButton_exportAsInitialSolution.setStatusTip(_translate("MainWindow", "Save initial solution with extension .jpg"))
        self.toolButton_clearInitialSolution.setStatusTip(_translate("MainWindow", "Clear initial solution"))
        self.toolButton_undoInitialSolution.setStatusTip(_translate("MainWindow", "Undo initial solution"))
        self.toolButton_redoInitialSolution.setStatusTip(_translate("MainWindow", "Redo initial solution"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Final Solution"))
        self.toolButton_saveFinalSolution.setStatusTip(_translate("MainWindow", "Save final solution with extension .txt"))
        self.toolButton_exportAsFinalSolution.setStatusTip(_translate("MainWindow", "Save final solution with extension .jpg"))
        self.toolButton_clearFinalSolution.setStatusTip(_translate("MainWindow", "Clear final solution"))
        self.toolButton_undoFinalSolution.setStatusTip(_translate("MainWindow", "Undo final solution"))
        self.toolButton_redoFinalSolution.setStatusTip(_translate("MainWindow", "Redo final solution"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Clustering"))
        self.toolButton_kMeans.setStatusTip(_translate("MainWindow", "Apply k-means clustering algorithm to point cloud"))
        self.toolButton_affinityPropagation.setStatusTip(_translate("MainWindow", "Apply affinity propagation clustering algorithm to point cloud"))
        self.toolButton_meanShift.setStatusTip(_translate("MainWindow", "Apply mean shift clustering algorithm to point cloud"))
        self.toolButton_spectralClustering.setStatusTip(_translate("MainWindow", "Apply spectral clustering algorithm to point cloud"))
        self.toolButton_hierarchicalClustering.setStatusTip(_translate("MainWindow", "Apply hierarchical clustering algorithm to point cloud"))
        self.toolButton_dbscan.setStatusTip(_translate("MainWindow", "Apply DBSCAN clustering algorithm to point cloud"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Heuristics"))
        self.toolButton_hillClimbing.setStatusTip(_translate("MainWindow", "Apply hill climbing algorithm to generate new solution"))
        self.toolButton_simulatedAnneling.setStatusTip(_translate("MainWindow", "Apply simulated anneling algoriithm to generate new solution"))
        self.groupBox_11.setTitle(_translate("MainWindow", "Exit"))
        self.toolButton_exit.setStatusTip(_translate("MainWindow", "Close the program"))
        self.groupBox.setTitle(_translate("MainWindow", "Initial Solution"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Final Solution"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Info Panel"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuExport_As.setTitle(_translate("MainWindow", "Export As"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuClear.setTitle(_translate("MainWindow", "Clear"))
        self.menuUndo.setStatusTip(_translate("MainWindow", "Undo initial solution"))
        self.menuUndo.setTitle(_translate("MainWindow", "Undo"))
        self.menuRedo.setStatusTip(_translate("MainWindow", "Redo initial solution"))
        self.menuRedo.setTitle(_translate("MainWindow", "Redo"))
        self.menuClustering.setTitle(_translate("MainWindow", "Clustering"))
        self.menuHeuristics.setTitle(_translate("MainWindow", "Heuristics"))
        self.actionOpen_Data.setText(_translate("MainWindow", "Open Data"))
        self.actionOpen_Data.setStatusTip(_translate("MainWindow", "Open .txt file to import point cloud"))
        self.actionSave_Initial_Solution.setText(_translate("MainWindow", "Save Initial Solution"))
        self.actionSave_Initial_Solution.setStatusTip(_translate("MainWindow", "Save initial solution with extension .txt"))
        self.actionSave_Final_Solution.setText(_translate("MainWindow", "Save Final Solution"))
        self.actionSave_Final_Solution.setStatusTip(_translate("MainWindow", "Save final solution with extension .txt"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Close the program"))
        self.actionClear_Initial_Solution.setText(_translate("MainWindow", "Initial Solution"))
        self.actionClear_Initial_Solution.setStatusTip(_translate("MainWindow", "Clear initial solution"))
        self.actionClear_Final_Solution.setText(_translate("MainWindow", "Final Solution"))
        self.actionClear_Final_Solution.setStatusTip(_translate("MainWindow", "Clear final solution"))
        self.actionUndo_Initial_Solution.setText(_translate("MainWindow", "Initial Solution"))
        self.actionUndo_Final_Solution.setText(_translate("MainWindow", "Final Solution"))
        self.actionUndo_Final_Solution.setStatusTip(_translate("MainWindow", "Undo final solution"))
        self.actionRedo_Initial_Solution.setText(_translate("MainWindow", "Initial Solution"))
        self.actionRedo_Final_Solution.setText(_translate("MainWindow", "Final Solution"))
        self.actionRedo_Final_Solution.setStatusTip(_translate("MainWindow", "Redo final solution"))
        self.actionK_Means.setText(_translate("MainWindow", "K-Means"))
        self.actionK_Means.setStatusTip(_translate("MainWindow", "Apply k-means clustering algorithm to point cloud"))
        self.actionAffinity_Propagation.setText(_translate("MainWindow", "Affinity Propagation"))
        self.actionAffinity_Propagation.setStatusTip(_translate("MainWindow", "Apply affinity propagation clustering algorithm to point cloud"))
        self.actionMean_shift.setText(_translate("MainWindow", "Mean-shift"))
        self.actionMean_shift.setStatusTip(_translate("MainWindow", "Apply mean shift clustering algorithm to point cloud"))
        self.actionSpectral_Clustering.setText(_translate("MainWindow", "Spectral Clustering"))
        self.actionSpectral_Clustering.setStatusTip(_translate("MainWindow", "Apply spectral clustering algorithm to point cloud"))
        self.actionHierarchical_Clustering.setText(_translate("MainWindow", "Hierarchical Clustering"))
        self.actionHierarchical_Clustering.setStatusTip(_translate("MainWindow", "Apply hierarchical clustering algorithm to point cloud"))
        self.actionDBSCAN.setText(_translate("MainWindow", "DBSCAN"))
        self.actionDBSCAN.setStatusTip(_translate("MainWindow", "Apply DBSCAN clustering algorithm to point cloud"))
        self.actionHill_Climbing.setText(_translate("MainWindow", "Hill Climbing"))
        self.actionHill_Climbing.setStatusTip(_translate("MainWindow", "Apply hill climbing algorithm to generate new solution"))
        self.actionSimulated_Anneling.setText(_translate("MainWindow", "Simulated Anneling"))
        self.actionSimulated_Anneling.setStatusTip(_translate("MainWindow", "Apply simulated anneling algoriithm to generate new solution"))
        self.actionExport_As_Initial_Solution.setText(_translate("MainWindow", "Initial Solution"))
        self.actionExport_As_Initial_Solution.setStatusTip(_translate("MainWindow", "Save initial solution with extension .jpg"))
        self.actionExport_As_Final_Solution.setText(_translate("MainWindow", "Final Solution"))
        self.actionExport_As_Final_Solution.setStatusTip(_translate("MainWindow", "Save final solution with extension .jpg"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
